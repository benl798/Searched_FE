{"version":3,"sources":["components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/ShowImage.js","components/Login.js","components/MyImages.js","App.js","index.js"],"names":["SearchBar","state","query","onInputChange","event","setState","target","value","onFormSubmit","preventDefault","props","history","push","onSubmit","this","className","htmlFor","type","onChange","React","Component","ImageCard","setSpans","height","imageRef","current","clientHeight","spanRows","Math","ceil","spans","createRef","console","log","image","id","addEventListener","style","gridRowEnd","ref","key","src","urls","regular","alt","alt_description","to","ImageList","images","fetchSearchResults","a","axios","get","params","match","headers","Authorization","response","data","results","prevProps","prevState","imgs","map","img","ShowImage","count","showSaveImageButton","handleSave","ev","post","description","unsplash_id","latitude","location","position","longitude","location_name","name","url","thumb","then","res","catch","err","warn","isImageSaved","currentUser","i","length","fetchImageInfo","small","onClick","incrementLike","Login","email","password","handleInput","handleSubmit","request","auth","result","localStorage","setItem","jwt","defaults","common","setCurrentUser","placeholder","MyImages","App","token","getItem","handleLogout","undefined","removeItem","exact","path","render","userSubmit","onSearchSubmit","component","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.0a32586d.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport '/Users/Ben/sei/projects/practice/react/practice/src/css/SearchBar.css'\n\nclass SearchBar extends React.Component {\n  state = { query: ''}\n\n  onInputChange = (event) => {\n    this.setState({ query: event.target.value })\n  }\n\n  onFormSubmit = (event) => {\n    event.preventDefault();\n    this.props.history.push(`/search/${this.state.query}`);\n    // this.props.userSubmit(this.state.val);\n  }\n\n\n  render () {\n    return (\n      <div>\n        <form onSubmit={this.onFormSubmit} className=\"flexContainer\">\n          <label htmlFor=\"search\"><h2>Image Search: </h2></label>\n          <input\n            className=\"inputStyle\"\n            type=\"text\"\n            onChange={this.onInputChange}\n          />\n        </form>\n      </div>\n    )\n\n  }\n}\n\nexport default SearchBar;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass ImageCard extends Component {\n  constructor(props){\n    super(props);\n    this.state = { spans: 0 }\n    this.imageRef = React.createRef();\n  }\n\n\n\n  componentDidMount() {\n    console.log(this.props.image.id);\n    // console.log(this.imageRef.current.clientHeight);\n    this.imageRef.current.addEventListener('load', this.setSpans);\n  }\n\n  setSpans = () => {\n    // console.log(this.imageRef.current.clientHeight);\n    const height = this.imageRef.current.clientHeight;\n    const spanRows = Math.ceil(height / 10);\n    this.setState({ spans: spanRows })\n  }\n\n  render() {\n    return (\n      <div style={{ gridRowEnd: `span ${this.state.spans}`}}>\n        <img ref={this.imageRef} key={this.props.image.id}\n            src={this.props.image.urls.regular}\n            alt={this.props.image.alt_description}\n        />\n      \n      <Link to={`/ShowImage/${this.props.image.id}`}>\n         <button>More info</button>\n       </Link>\n      </div>\n    )\n  }\n}\n\nexport default ImageCard\n","import React from 'react';\nimport '/Users/Ben/sei/projects/practice/react/practice/src/css/ImageList.css';\nimport ImageCard from './ImageCard.js';\nimport axios from 'axios';\n\nclass ImageList extends React.Component {\n\n  state = { images: [] }\n\n  fetchSearchResults = async() => {\n    const response = await axios.get('https://api.unsplash.com/search/photos', {\n      params: { query: this.props.match.params.query },\n      headers: {\n        Authorization: 'Client-ID 8a5UR7gdFTOgRV9Mg9Z5L4TJrYeIMNaqocGx5aj83KE'\n      }\n    })\n    console.log(response);\n    this.setState({ images: response.data.results })\n  }\n\n  componentDidMount () {\n    this.fetchSearchResults();\n  } // componentDidMount\n\n  componentDidUpdate ( prevProps, prevState ) {\n    if (prevProps.match.params.query !== this.props.match.params.query) {\n      // Only get the new search results if componentDidUpdate is being run because the query prop has changed. (Not because state has updated)\n      this.fetchSearchResults();\n    }\n  } // componentDidUpdate\n\n  render () {\n    const imgs = this.state.images.map(img => {\n      return <ImageCard image={img} />\n    })\n\n    return (\n      <div className=\"image__list\">{imgs}</div>\n    )\n  }\n\n\n} // class ImageList\n\nexport default ImageList\n","import React from 'react';\nimport ImageList from './ImageList';\nimport axios from 'axios';\n// import UNSPLASH_BASE_URL = 'https://api.unsplash.com/photos';\n// import UNSPLASH_TOKENS = '/?client_id=8a5UR7gdFTOgRV9Mg9Z5L4TJrYeIMNaqocGx5aj83KE';\n\nclass ShowImage extends React.Component {\n\n state = {\n   image: {},\n   count: 0,\n   showSaveImageButton: true\n\n };\n\nfetchImageInfo(){\n  console.log('fetchImageInfo');\n  axios.get(`https://api.unsplash.com/photos/${this.props.match.params.image}?client_id=8a5UR7gdFTOgRV9Mg9Z5L4TJrYeIMNaqocGx5aj83KE`)\n  .then( res => {\n    console.log( 'image data:', res.data );\n    this.setState({ image: res.data });\n    this.isImageSaved();\n  })\n} // fetchImageInfo\n\nhandleSave = (ev) => {\n  console.log('Clicked!');\n  axios.post(`http://localhost:3000/images`, {\n    description: this.state.image.description,\n    alt_description: this.state.image.alt_description,\n    unsplash_id: this.state.image.id,\n    latitude: this.state.image.location.position.latitude,\n    longitude: this.state.image.location.position.longitude,\n    location_name: this.state.image.location.name,\n    url: this.state.image.urls.thumb\n\n  })\n  .then(res => {\n    console.log(res.data);\n    this.setState({showSaveImageButton: false})\n  })\n  .catch(err => {\n    console.warn(err)\n  })\n  ev.preventDefault();\n }\n\n\nisImageSaved(){\n  const images = this.props.currentUser.images\n  console.log(images);\n  for (var i = 0; i < images.length; i++) {\n    if (images[i].unsplash_id === this.state.image.id) {\n      this.setState({showSaveImageButton: false})\n    }\n  }\n}\n\n\ncomponentDidMount (){\n  console.log(this.props);\n  this.fetchImageInfo();\n}\n\n\nrender() {\n  console.log(this.props.match.params.image);\n  // Loop through the list of imgs and for each img check if the img unsplash_id = this.props.match.params.image\n  // If matches then save a variable true which will determine what appears in the 'save image' button\n  // If already in the list = already saved/disabled, otherwise user hasnt saved img yet and should appear\n  return (\n    <div>\n      Show Page\n      <h2>image of { this.state.image.alt_description }</h2>\n      <img src={this.state.image?.urls?.small} />\n      <p>{ this.state.image.description }</p>\n      <p>{ this.state.image.location?.name }</p>\n      <button onClick={this.incrementLike}> Likes: {this.state.count}</button>\n      {\n        this.state.showSaveImageButton &&\n          <button onClick={this.handleSave}>Save Image</button>\n      }\n    </div>\n  )\n}\n\n} // class ShowImage\n\nexport default ShowImage;\n","import React from 'react';\nimport axios from 'axios';\n\nconst BASE_URL = 'http://localhost:3000'\n\nclass Login extends React.Component{\n  state = {\n    email: '',\n    password: ''\n  }\n\n  handleInput = (ev) => {\n    switch(ev.target.name){\n      case 'email':\n        this.setState({email: ev.target.value})\n        break;\n      case 'password':\n        this.setState({password: ev.target.value})\n    }\n  } //handleInput\n\n  handleSubmit = (ev) => {\n    //create a request object we can pass through to knock\n   const request = {'email': this.state.email, 'password': this.state.password}\n\n   //do an axios post request where we can send through the user details to rails and login\n   axios.post(`${BASE_URL}/user_token`, {auth: request})\n   .then(result => {\n     localStorage.setItem(\"jwt\", result.data.jwt)\n     axios.defaults.headers.common['Authorization'] = 'Bearer ' + result.data.jwt;\n     this.props.setCurrentUser();\n     this.props.history.push('/my_profile');\n   })\n   .catch(err => {\n     console.warn(err)\n   })\n   ev.preventDefault();\n  }\n\n  render(){\n    return(\n      <form onSubmit={this.handleSubmit}>\n        <label>Login Form</label>\n        <br/>\n        <input\n          onChange={this.handleInput}\n          name=\"email\"\n          type=\"email\"\n          placeholder='Enter Email'\n        />\n        <br/>\n        <input\n          onChange={this.handleInput}\n          name=\"password\"\n          type=\"password\"\n          placeholder='Enter Password'\n        />\n        <br/>\n        <button>Login</button>\n      </form>\n    ); // return\n  }// render\n} // class Login\n\nexport default Login\n","import React from 'react'\nimport axios from 'axios'\n\nconst BASE_URL = 'http://localhost:3000'\n\nclass MyImages extends React.Component{\n  state = {\n    images: []\n  }\n\n  componentDidMount(){\n    // let token = \"Bearer \" + localStorage.getItem(\"jwt\");\n    axios.get(`${BASE_URL}/my_saved_images`\n      // {\n      // headers: {\n      //   'Authorization': token\n      // }\n    //}\n  )\n    .then(res => {\n      console.log('data', res.data);\n      this.setState({images: res.data})\n    })\n    .catch(err => console.warn(err))\n  }\n\n  render(){\n    return(\n      <div>\n        {\n          this.state.images.map(image => {\n            return(\n              <div>\n                <p>Image of {image.description}</p>\n                <p>{image.location_name}</p>\n                <p>{image.alt_description}</p>\n                <p>{image.latitude}</p>\n                <p>{image.longitude}</p>\n                <img src={image.url}/>\n              </div>\n            )\n          })\n        }\n      </div>\n    );\n  }//render\n\n}//class MyImages\n\n\nexport default MyImages\n","import React from 'react';\nimport axios from 'axios';\nimport SearchBar from './components/SearchBar';\nimport ImageList from './components/ImageList';\nimport ShowImage from './components/ShowImage';\nimport Login from './components/Login'\nimport MyImages from './components/MyImages'\nimport { Route, Link, HashRouter as Router } from 'react-router-dom';\n\nconst BASE_URL = 'http://localhost:3000'\n\n\nclass App extends React.Component {\n\n  state = {\n    currentUser: {\n      images: []\n    }\n  }\n\n\n  componentDidMount(){\n    this.setCurrentUser();\n  }\n\n  setCurrentUser = () => {\n    let token = \"Bearer \" + localStorage.getItem(\"jwt\");\n    axios.get(`${BASE_URL}/users/current`, {\n      headers: {\n        'Authorization': token\n      }\n    })\n    .then(res => {\n      this.setState({currentUser: res.data})\n    })\n    .catch(err => console.warn(err))\n  }\n\n  handleLogout = () => {\n    this.setState({currentUser: undefined})\n    localStorage.removeItem(\"jwt\");\n    axios.defaults.headers.common['Authorization'] = undefined;\n  }\n\n  render() {\n    return (\n      <Router>\n        <header>\n          <nav>\n              {\n                this.state.currentUser !== undefined\n                ?\n                (\n                  <ul>\n                    <li>Welcome {this.state.currentUser.name} | </li>\n                    <li><Link to='/my_images'>My Saved Images</Link></li>\n                    <li><Link onClick={this.handleLogout} to='/'>Logout</Link></li>\n                  </ul>\n                )\n                :\n                (\n                  <Link to='/login'>Login</Link>\n                )\n              }\n          </nav>\n          <hr/>\n        </header>\n        <Route\n          exact path='/login'\n          render={(props) => <Login setCurrentUser={this.setCurrentUser}{...props}/>}\n          />\n        <Route path=\"/\" render={(props) => <SearchBar userSubmit={this.onSearchSubmit} {...props} />} />\n        <Route exact path=\"/search/:query\" component={ ImageList } />\n        <Route exact path=\"/ShowImage/:image\"\n          render={(props) => <ShowImage currentUser={this.state.currentUser} {...props}/>}  />\n        <Route exact path='/my_images' component={MyImages}/>\n\n      </Router>\n    ); // return\n  } // render\n\n} // class App\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}